rep(1:6,time=30)
label<-rep(1:6,time=30)
subject<-rep(1:30, each=6)
label<-rep(1:6,time=30)
dataComplete<-cbind(subject,label)
View(dataComplete)
bin<-matrix(1,ncol(dataNew))
View(bin)
bin<-data.frame()
bin<-data.frame()
for (i in 1:30){
for (j in 1:6){
cal<-dataNew[(dataNEw$subject==i&dataNew$label==j),]
bin<-cbind(bin,apply(cal,mean))
}
}
bin<-data.frame()
for (i in 1:30){
for (j in 1:6){
cal<-dataNew[(dataNew$subject==i&dataNew$label==j),]
bin<-cbind(bin,apply(cal,mean))
}
}
#read all training data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/train")
subjectTrain<-read.csv("subject_train.txt",head=FALSE)
xTrain<-read.csv("X_train.txt",sep="",head=FALSE)
yTrain<-read.csv("y_train.txt",head=FALSE)
data<-data.frame()
data<-cbind(subjectTrain,yTrain,xTrain)
#read all testing data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/test")
subjectTest<-read.csv("subject_test.txt",head=FALSE)
xTest<-read.csv("X_test.txt",sep="",head=FALSE)
yTest<-read.csv("y_test.txt",head=FALSE)
data2<-data.frame()
data2<-cbind(subjectTest,yTest,xTest)
#combine testing and training data
dataNew<-rbind(data,data2)
#extract name of column from features file
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset")
features<-scan("features.txt",what=character())
featuresNew<-features[seq(2,length(features),2)]
#rename the columns of dataNew file and order by subject and label
colnames(dataNew)<-c("subject","label",featuresNew)
dataNew<-dataNew[order(dataNew$subject,dataNew$label),]
#exclude the angle between Mean and other components, and exclude meanFreq
extractMeanStd<-featuresNew[(grepl("mean",featuresNew) |
grepl("std",featuresNew))&
!grepl("Freq",featuresNew)]
dataNew<-dataNew[,extractMeanStd]
cal<-dataNew[(dataNew$subject==1&dataNew$label==1),]
View(dataNew)
extractMeanStd<-c("subject","label",featuresNew)
extractMeanStd<-c("subject","label",extractMeanStd)
extractMeanStd<-c("subject","label",extractMeanStd)
extractMeanStd<-c("subject","label",extractMeanStd)
#read all training data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/train")
subjectTrain<-read.csv("subject_train.txt",head=FALSE)
xTrain<-read.csv("X_train.txt",sep="",head=FALSE)
yTrain<-read.csv("y_train.txt",head=FALSE)
data<-data.frame()
data<-cbind(subjectTrain,yTrain,xTrain)
#read all testing data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/test")
subjectTest<-read.csv("subject_test.txt",head=FALSE)
xTest<-read.csv("X_test.txt",sep="",head=FALSE)
yTest<-read.csv("y_test.txt",head=FALSE)
data2<-data.frame()
data2<-cbind(subjectTest,yTest,xTest)
#combine testing and training data
dataNew<-rbind(data,data2)
#extract name of column from features file
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset")
features<-scan("features.txt",what=character())
featuresNew<-features[seq(2,length(features),2)]
#rename the columns of dataNew file and order by subject and label
colnames(dataNew)<-c("subject","label",featuresNew)
dataNew<-dataNew[order(dataNew$subject,dataNew$label),]
#exclude the angle between Mean and other components, and exclude meanFreq
extractMeanStd<-featuresNew[(grepl("mean",featuresNew) |
grepl("std",featuresNew))&
!grepl("Freq",featuresNew)]
extractMeanStd<-c("subject","label",extractMeanStd)
bin<-data.frame()
for (i in 1:30){
for (j in 1:6){
cal<-dataNew[(dataNew$subject==i&dataNew$label==j),]
bin<-cbind(bin,apply(cal,mean))
}
}
cal<-dataNew[(dataNew$subject==1&dataNew$label==1),]
#read all training data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/train")
subjectTrain<-read.csv("subject_train.txt",head=FALSE)
xTrain<-read.csv("X_train.txt",sep="",head=FALSE)
yTrain<-read.csv("y_train.txt",head=FALSE)
data<-data.frame()
data<-cbind(subjectTrain,yTrain,xTrain)
#read all testing data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/test")
subjectTest<-read.csv("subject_test.txt",head=FALSE)
xTest<-read.csv("X_test.txt",sep="",head=FALSE)
yTest<-read.csv("y_test.txt",head=FALSE)
data2<-data.frame()
data2<-cbind(subjectTest,yTest,xTest)
#combine testing and training data
dataNew<-rbind(data,data2)
#extract name of column from features file
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset")
features<-scan("features.txt",what=character())
featuresNew<-features[seq(2,length(features),2)]
#rename the columns of dataNew file and order by subject and label
colnames(dataNew)<-c("subject","label",featuresNew)
dataNew<-dataNew[order(dataNew$subject,dataNew$label),]
#exclude the angle between Mean and other components, and exclude meanFreq
extractMeanStd<-featuresNew[(grepl("mean",featuresNew) |
grepl("std",featuresNew))&
!grepl("Freq",featuresNew)]
extractMeanStd<-c("subject","label",extractMeanStd)
dataNew<-dataNew[,extractMeanStd]
cal<-dataNew[(dataNew$subject==1&dataNew$label==1),]
apply(cal,mean)
lapply(cal,mean))
lapply(cal,mean)
bin<-cbind(bin,lapply(cal,mean))
bin<-matrix()
bin<-cbind(bin,lapply(cal,mean))
compData <- data.frame(A= numeric(0), B= numeric(0))
#read all training data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/train")
subjectTrain<-read.csv("subject_train.txt",head=FALSE)
xTrain<-read.csv("X_train.txt",sep="",head=FALSE)
yTrain<-read.csv("y_train.txt",head=FALSE)
data<-data.frame()
data<-cbind(subjectTrain,yTrain,xTrain)
#read all testing data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/test")
subjectTest<-read.csv("subject_test.txt",head=FALSE)
xTest<-read.csv("X_test.txt",sep="",head=FALSE)
yTest<-read.csv("y_test.txt",head=FALSE)
data2<-data.frame()
data2<-cbind(subjectTest,yTest,xTest)
#combine testing and training data
dataNew<-rbind(data,data2)
#extract name of column from features file
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset")
features<-scan("features.txt",what=character())
featuresNew<-features[seq(2,length(features),2)]
#rename the columns of dataNew file and order by subject and label
colnames(dataNew)<-c("subject","label",featuresNew)
dataNew<-dataNew[order(dataNew$subject,dataNew$label),]
#exclude the angle between Mean and other components, and exclude meanFreq
extractMeanStd<-featuresNew[(grepl("mean",featuresNew) |
grepl("std",featuresNew))&
!grepl("Freq",featuresNew)]
columnUse<-c("subject","label",extractMeanStd)
dataNew<-dataNew[,columnUse]
bin<-data.frame(colnames(columnUse))
for (i in 1:30){
for (j in 1:6){
cal<-dataNew[(dataNew$subject==i&dataNew$label==j),]
bin<-cbind(bin,lapply(cal,mean))
}
}
colnames(bin)<-columnUse
bin<-data.frame(col=68)
bin<-data.frame(0)
names(dataNEw)
names(dataNew)
bin<-matrix(nrow=1,ncol=68)
View(bin)
colnames(bin)<-columnUse
View(bin)
bin<-cbind(bin,c(i,j,lapply(cal,mean))
View(bin)
bin<-cbind(bin,c(i,j,lapply(cal,mean)))
c(i,j,lapply(cal,mean))
length(compData <- data.frame(A= numeric(0), B= numeric(0)))
length(c(i,j,lapply(cal,mean)))
cal<-dataNew[(dataNew$subject==i&dataNew$label==j),]
bin<-matrix(nrow=1,ncol=68)
bin<-cbind(bin,c(i,j,lapply(cal,mean)))
colnames(bin)<-extractMeanStd
bin<-matrix(nrow=1,ncol=68)
colnames(bin)<-extractMeanStd
bin<-data.frame()
colnames(bin)<-extractMeanStd
bin<-cbind(bin,c(i,j,lapply(cal,mean)))
bin<-data.frame()
colnames(bin)<-extractMeanStd
attributes(data.frame)
?data.frame
avg<-lapply(cal,mean)
avg<-data.frame(lapply(cal,mean))
avg<-data.frame(c(i,j,lapply(cal,mean)))
#read all training data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/train")
subjectTrain<-read.csv("subject_train.txt",head=FALSE)
xTrain<-read.csv("X_train.txt",sep="",head=FALSE)
yTrain<-read.csv("y_train.txt",head=FALSE)
data<-data.frame()
data<-cbind(subjectTrain,yTrain,xTrain)
#read all testing data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/test")
subjectTest<-read.csv("subject_test.txt",head=FALSE)
xTest<-read.csv("X_test.txt",sep="",head=FALSE)
yTest<-read.csv("y_test.txt",head=FALSE)
data2<-data.frame()
data2<-cbind(subjectTest,yTest,xTest)
#combine testing and training data
dataNew<-rbind(data,data2)
#extract name of column from features file
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset")
features<-scan("features.txt",what=character())
featuresNew<-features[seq(2,length(features),2)]
#rename the columns of dataNew file and order by subject and label
colnames(dataNew)<-c("subject","label",featuresNew)
dataNew<-dataNew[order(dataNew$subject,dataNew$label),]
#exclude the angle between Mean and other components, and exclude meanFreq
extractMeanStd<-featuresNew[(grepl("mean",featuresNew) |
grepl("std",featuresNew))&
!grepl("Freq",featuresNew)]
dataNew<-dataNew[,extractMeanStd]
bin<-data.frame()
i=1
j=1
cal<-dataNew[(dataNew$subject==i&dataNew$label==j),]
#read all training data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/train")
subjectTrain<-read.csv("subject_train.txt",head=FALSE)
xTrain<-read.csv("X_train.txt",sep="",head=FALSE)
yTrain<-read.csv("y_train.txt",head=FALSE)
data<-data.frame()
data<-cbind(subjectTrain,yTrain,xTrain)
#read all testing data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/test")
subjectTest<-read.csv("subject_test.txt",head=FALSE)
xTest<-read.csv("X_test.txt",sep="",head=FALSE)
yTest<-read.csv("y_test.txt",head=FALSE)
data2<-data.frame()
data2<-cbind(subjectTest,yTest,xTest)
#combine testing and training data
dataNew<-rbind(data,data2)
#extract name of column from features file
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset")
features<-scan("features.txt",what=character())
featuresNew<-features[seq(2,length(features),2)]
#rename the columns of dataNew file and order by subject and label
colnames(dataNew)<-c("subject","label",featuresNew)
dataNew<-dataNew[order(dataNew$subject,dataNew$label),]
#exclude the angle between Mean and other components, and exclude meanFreq
extractMeanStd<-featuresNew[(grepl("mean",featuresNew) |
grepl("std",featuresNew))&
!grepl("Freq",featuresNew)]
dataNew<-dataNew[,c("subject","label",extractMeanStd]
#find average value for each features
bin<-data.frame()
cal<-dataNew[(dataNew$subject==i&dataNew$label==j),]
dataNew<-dataNew[,c("subject","label",extractMeanStd)]
bin<-data.frame()
cal<-dataNew[(dataNew$subject==i&dataNew$label==j),]
avg<-data.frame(c(i,j,lapply(cal[,extractMeanStd],mean)))
bin<-cbind(bin,avg)
View(avg)
bin<-cbind(bin,avg)
bin<-list()
k<-1
bin[[k]]<-avg
k<-k+1
bin[[k]]<-avg
View(bin)
#read all training data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/train")
subjectTrain<-read.csv("subject_train.txt",head=FALSE)
xTrain<-read.csv("X_train.txt",sep="",head=FALSE)
yTrain<-read.csv("y_train.txt",head=FALSE)
data<-data.frame()
data<-cbind(subjectTrain,yTrain,xTrain)
#read all testing data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/test")
subjectTest<-read.csv("subject_test.txt",head=FALSE)
xTest<-read.csv("X_test.txt",sep="",head=FALSE)
yTest<-read.csv("y_test.txt",head=FALSE)
data2<-data.frame()
data2<-cbind(subjectTest,yTest,xTest)
#combine testing and training data
dataNew<-rbind(data,data2)
#extract name of column from features file
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset")
features<-scan("features.txt",what=character())
featuresNew<-features[seq(2,length(features),2)]
#rename the columns of dataNew file and order by subject and label
colnames(dataNew)<-c("subject","label",featuresNew)
dataNew<-dataNew[order(dataNew$subject,dataNew$label),]
#exclude the angle between Mean and other components, and exclude meanFreq
extractMeanStd<-featuresNew[(grepl("mean",featuresNew) |
grepl("std",featuresNew))&
!grepl("Freq",featuresNew)]
dataNew<-dataNew[,c("subject","label",extractMeanStd)]
#find average value for each features
bin<-list()
for (i in 1:30){
for (j in 1:6){
k<-1
cal<-dataNew[(dataNew$subject==i&dataNew$label==j),]
avg<-data.frame(c(i,j,lapply(cal[,extractMeanStd],mean)))
bin[[k]]<-avg
k<-k+1
}
}
View(bin)
for (i in 1:30){
for (j in 1:6){
k<-1
cal<-dataNew[(dataNew$subject==i&dataNew$label==j),]
avg<-data.frame(c(i,j,lapply(cal[,extractMeanStd],mean)))
bin[[k]]<-avg
k<-k+1
}
}
View(bin)
for (i in 1:30){
for (j in 1:6){
if(i==1&j==1){k<-1}
cal<-dataNew[(dataNew$subject==i&dataNew$label==j),]
avg<-data.frame(c(i,j,lapply(cal[,extractMeanStd],mean)))
bin[[k]]<-avg
k<-k+1
}
}
View(bin)
View(bin)
dataComplete<-do.call(rbind,bin)
big_data <- dplyr::bind_rows(bin)
big_data <- dplyr::bind_rows(bin)
big_data <- dplyr::bind_rows(bin)
big_data <-bind_rows(bin)
View(bin)
View(big_data)
View(avg)
cal<-dataNew[(dataNew$subject==i&dataNew$label==j),]
avg<-data.frame(lapply(cal[,extractMeanStd],mean))
avg$subject<-i
avg$label<-j
#read all training data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/train")
subjectTrain<-read.csv("subject_train.txt",head=FALSE)
xTrain<-read.csv("X_train.txt",sep="",head=FALSE)
yTrain<-read.csv("y_train.txt",head=FALSE)
data<-data.frame()
data<-cbind(subjectTrain,yTrain,xTrain)
#read all testing data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/test")
subjectTest<-read.csv("subject_test.txt",head=FALSE)
xTest<-read.csv("X_test.txt",sep="",head=FALSE)
yTest<-read.csv("y_test.txt",head=FALSE)
data2<-data.frame()
data2<-cbind(subjectTest,yTest,xTest)
#combine testing and training data
dataNew<-rbind(data,data2)
#extract name of column from features file
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset")
features<-scan("features.txt",what=character())
featuresNew<-features[seq(2,length(features),2)]
#rename the columns of dataNew file and order by subject and label
colnames(dataNew)<-c("subject","label",featuresNew)
dataNew<-dataNew[order(dataNew$subject,dataNew$label),]
#exclude the angle between Mean and other components, and exclude meanFreq
extractMeanStd<-featuresNew[(grepl("mean",featuresNew) |
grepl("std",featuresNew))&
!grepl("Freq",featuresNew)]
dataNew<-dataNew[,c("subject","label",extractMeanStd)]
#find average value for each features
bin<-list()
for (i in 1:30){
for (j in 1:6){
if(i==1&j==1){k<-1}
cal<-dataNew[(dataNew$subject==i&dataNew$label==j),]
avg<-data.frame(lapply(cal[,extractMeanStd],mean))
avg$subject<-i
avg$label<-j
bin[[k]]<-avg
k<-k+1
}
}
dataComplete <-bind_rows(bin)
View(dataComplete)
dataComplete<-subset(dataComplete,select=c("subject","label",extractMeanStd))
dataComplete<-select(dataComplete,"subject","label",extractMeanStd)
dataComplete<-subset(dataComplete,select=c("subject","label",extractMeanStd))
dataComplete<-subset(dataComplete,select=c("subject","label"))
dataComplete<-subset(dataComplete,select=c("subject","label",extractMeanStd))
dataComplete<-subset(dataComplete,select=c("subject","label"))
dataComplete<-subset(dataComplete,select=extractMeanStd)
dataComplete<-dataComplete[,c("subject","label",extractMeanStd)]
class(extractMeanStd)
extractMeanStd[1]
dataComplete<-dataComplete[,c("subject","label",extractMeanStd[1])]
View(dataComplete)
dataComplete <-bind_rows(bin)
dataComplete<-dataComplete[,c("subject","label",extractMeanStd[1])]
View(dataComplete)
dataComplete$tBodyAcc.mean...X
colnames(dataComplete)<-c("subject","label",extractMeanStd)
dataComplete<-dataComplete[,c("subject","label",extractMeanStd)]
#read all training data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/train")
subjectTrain<-read.csv("subject_train.txt",head=FALSE)
xTrain<-read.csv("X_train.txt",sep="",head=FALSE)
yTrain<-read.csv("y_train.txt",head=FALSE)
data<-data.frame()
data<-cbind(subjectTrain,yTrain,xTrain)
#read all testing data and combine them
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset/test")
subjectTest<-read.csv("subject_test.txt",head=FALSE)
xTest<-read.csv("X_test.txt",sep="",head=FALSE)
yTest<-read.csv("y_test.txt",head=FALSE)
data2<-data.frame()
data2<-cbind(subjectTest,yTest,xTest)
#combine testing and training data
dataNew<-rbind(data,data2)
#extract name of column from features file
setwd("D:/Google Drive/dataScientist/UCI HAR Dataset")
features<-scan("features.txt",what=character())
featuresNew<-features[seq(2,length(features),2)]
#rename the columns of dataNew file and order by subject and label
colnames(dataNew)<-c("subject","label",featuresNew)
dataNew<-dataNew[order(dataNew$subject,dataNew$label),]
#exclude the angle between Mean and other components, and exclude meanFreq
extractMeanStd<-featuresNew[(grepl("mean",featuresNew) |
grepl("std",featuresNew))&
!grepl("Freq",featuresNew)]
dataNew<-dataNew[,c("subject","label",extractMeanStd)]
#find average value for each features
bin<-list()
for (i in 1:30){
for (j in 1:6){
if(i==1&j==1){k<-1}
cal<-dataNew[(dataNew$subject==i&dataNew$label==j),]
avg<-data.frame(lapply(cal[,extractMeanStd],mean))
avg$subject<-i
avg$label<-j
bin[[k]]<-avg
k<-k+1
}
}
dataComplete <-bind_rows(bin)
colnames(dataComplete)<-c(extractMeanStd,"subject","label")
dataComplete<-subset(dataComplete,select=c("subject","label",extractMeanStd))
View(dataComplete)
?write.table
write.table(dataComplete,"tidyDataSet.txt",row.name=FALSE)
setwd("~/UCI HAR Dataset/train")
getwd
getwd()
setwd("~/train")
setwd("C:/Users/Acer/testRepo/projectCourse3/UCI HAR Dataset/train")
setwd("C:/Users/Acer/testRepo/projectCourse3/UCI HAR Dataset/test")
#read all training data and combine them
setwd("C:/Users/Acer/testRepo/projectCourse3/UCI HAR Dataset/train")
subjectTrain<-read.csv("subject_train.txt",head=FALSE)
xTrain<-read.csv("X_train.txt",sep="",head=FALSE)
yTrain<-read.csv("y_train.txt",head=FALSE)
data<-data.frame()
data<-cbind(subjectTrain,yTrain,xTrain)
#read all testing data and combine them
setwd("C:/Users/Acer/testRepo/projectCourse3/UCI HAR Dataset/test")
subjectTest<-read.csv("subject_test.txt",head=FALSE)
xTest<-read.csv("X_test.txt",sep="",head=FALSE)
yTest<-read.csv("y_test.txt",head=FALSE)
data2<-data.frame()
data2<-cbind(subjectTest,yTest,xTest)
#combine testing and training data into dataNew
dataNew<-rbind(data,data2)
#extract name of column from features file
setwd("C:/Users/Acer/testRepo/projectCourse3/UCI HAR Dataset")
features<-scan("features.txt",what=character())
featuresNew<-features[seq(2,length(features),2)]
#rename the columns of dataNew file and order by subject and label
colnames(dataNew)<-c("subject","label",featuresNew)
dataNew<-dataNew[order(dataNew$subject,dataNew$label),]
#extract only mean and std features Exclude the angle between
#Mean and other components, and exclude meanFreq
extractMeanStd<-featuresNew[(grepl("mean",featuresNew) |
grepl("std",featuresNew))&
!grepl("Freq",featuresNew)]
dataNew<-dataNew[,c("subject","label",extractMeanStd)]
#find average value of each features for each subject and label
bin<-list()
for (i in 1:30){
for (j in 1:6){
if(i==1&j==1){k<-1}
cal<-dataNew[(dataNew$subject==i&dataNew$label==j),]
avg<-data.frame(lapply(cal[,extractMeanStd],mean))
avg$subject<-i
avg$label<-j
bin[[k]]<-avg
k<-k+1
}
}
#combine average data into tidy data set
dataComplete <-bind_rows(bin)
colnames(dataComplete)<-c(extractMeanStd,"subject","label")
dataComplete<-subset(dataComplete,select=c("subject","label",extractMeanStd))
#write into text file
setwd("C:/Users/Acer/testRepo/projectCourse3")
write.table(dataComplete,"tidyDataSet.txt",row.name=FALSE)
class(dataComplete$subject)
class(dataComplete$`tBodyAcc-mean()-X`)
names(dataComplete)
